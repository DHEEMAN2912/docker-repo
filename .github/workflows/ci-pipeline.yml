name: Docker Container SHA256 Check with Dynamic SHA256

on:
  push:
    branches:
      - main

jobs:
  docker_job:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Enable Docker Content Trust
        run: |
          export DOCKER_CONTENT_TRUST=1

      - name: Build Docker image (Zero Trust)
        id: build_image  # Store output of this step for later
        run: |
          IMAGE_TAG="my-sample-image:latest"
          docker build -t $IMAGE_TAG .
          
          # Get the image SHA256 hash after building the image
          IMAGE_SHA256=$(docker inspect --format='{{.Id}}' $IMAGE_TAG)
          echo "Built image SHA256: $IMAGE_SHA256"
          
          # Output the SHA256 to be used in later steps
          echo "::set-output name=image_sha256::$IMAGE_SHA256"

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: |
          docker tag my-sample-image ${{ secrets.DOCKER_USERNAME }}/my-sample-image:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-sample-image:latest

      - name: Run Docker container from pushed image
        run: |
          docker run -d --name my-sample-container ${{ secrets.DOCKER_USERNAME }}/my-sample-image:latest

      - name: Inspect Docker container
        id: inspect_container
        run: |
          docker inspect my-sample-container > container_details.json
          CONTAINER_SHA256=$(docker inspect --format='{{.Image}}' my-sample-container)
          echo "Container SHA256: $CONTAINER_SHA256"
          echo "::set-output name=container_sha256::$CONTAINER_SHA256"

      - name: Compare image SHA256 with container SHA256 (Zero Trust)
        run: |
          IMAGE_SHA256="${{ steps.build_image.outputs.image_sha256 }}"
          CONTAINER_SHA256="${{ steps.inspect_container.outputs.container_sha256 }}"
          
          echo "Built image SHA256: $IMAGE_SHA256"
          echo "Container SHA256: $CONTAINER_SHA256"

          # Compare the two SHA256 hashes
          if [ "$IMAGE_SHA256" == "$CONTAINER_SHA256" ]; then
            echo "SHA256 matches. Success."
          else
            echo "SHA256 does not match. Failing pipeline."
            exit 1
          fi

    
